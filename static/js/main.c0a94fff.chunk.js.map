{"version":3,"sources":["services/getPreguntas.js","Cuestionario.js","App.js","reportWebVitals.js","index.js"],"names":["url","Questionary","_useState","useState","_useState2","Object","slicedToArray","questionNumber","setQuestionNumber","_useState3","_useState4","question","setQuestion","_useState5","_useState6","answers","setAnswer","_useState7","_useState8","score","setScore","Pregunta","_ref","_ref$p","p","incorrectAnswers","correctAnswer","allAnswers","concat","toConsumableArray","nextQuestion","event","ans","target","value","replace","scor","anterior","Alternativa","_ref2","pAns","react_default","a","createElement","key","onClick","className","PosibleAnswers","o","j","x","i","length","parseInt","Math","random","shuffle","map","possibleAnswer","useEffect","fetch","then","response","json","promis","results","ReviewAnswers","quest","correct_answer","undefined","incorrect_answers","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0a94fff.chunk.js","sourcesContent":["const url = \"https://opentdb.com/api.php?amount=10&category=18\"\r\n\r\nexport default function getPreguntas() {\r\n  return fetch(url)\r\n    .then((response) => {\r\n      return response.json()\r\n    })\r\n    .then((json) => {\r\n      return json\r\n    })\r\n}\r\n","import \"./Cuestionario.css\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport getPreguntas from \"./services/getPreguntas\"\r\n\r\nexport default function Questionary() {\r\n  const [questionNumber, setQuestionNumber] = useState(0)\r\n  const [question, setQuestion] = useState([])\r\n  const [answers, setAnswer] = useState([])\r\n  const [score, setScore] = useState(0)\r\n\r\n  useEffect(() => {\r\n    getPreguntas().then((promis) => setQuestion(promis.results))\r\n  }, [])\r\n\r\n  function Pregunta({\r\n    p = \"Pregunta generica\",\r\n    incorrectAnswers,\r\n    correctAnswer,\r\n  }) {\r\n    const allAnswers = [...incorrectAnswers, correctAnswer]\r\n    const nextQuestion = (event) => {\r\n      setAnswer((ans) => [...ans, event.target.value])\r\n\r\n      if (\r\n        event.target.value ===\r\n        correctAnswer.replace(/&quot;/g, \"\").replace(/&#039;/g, \"\")\r\n      ) {\r\n        setScore((scor) => scor + 1)\r\n      }\r\n      setQuestionNumber((anterior) => anterior + 1)\r\n    }\r\n    // Funcion Shuffle: Recibe un array y lo retorna con sus elementos en posiciones aleatorias\r\n    function shuffle(o) {\r\n      for (\r\n        var j, x, i = o.length;\r\n        i;\r\n        j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x\r\n      );\r\n      return o\r\n    }\r\n    // Componente de la alternativa\r\n    const Alternativa = ({ pAns }) => {\r\n      return (\r\n        <button\r\n          key={pAns}\r\n          value={pAns}\r\n          onClick={nextQuestion}\r\n          className=\"button\"\r\n        >\r\n          {pAns.replace(/&quot;/g, \"\").replace(/&#039;/g, \"\")}\r\n        </button>\r\n      )\r\n    }\r\n    // Componenete que mapea las posibles respuestas de cada pregunta\r\n    const PosibleAnswers = () => {\r\n      return shuffle(allAnswers).map((possibleAnswer) => (\r\n        <Alternativa key={possibleAnswer} pAns={possibleAnswer}></Alternativa>\r\n      ))\r\n    }\r\n    // Retorno de componente Pregunta\r\n    return (\r\n      <div className=\"Pregunta\">\r\n        <h3 className=\"Title\">\r\n          {p.replace(/&quot;/g, \"\").replace(/&#039;/g, \"\")}\r\n        </h3>\r\n        <PosibleAnswers className=\"answers\"></PosibleAnswers>\r\n        <h4 className=\"QuestionNumber\">{`Question ${\r\n          parseInt(questionNumber) + 1\r\n        } of ${parseInt(question.length)}`}</h4>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Componente Review Answers: Componente de la pagina final para revisar alternativas\r\n  const ReviewAnswers = () => {\r\n    let i = -1\r\n    return (\r\n      <div>\r\n        {question.map((quest) => {\r\n          i += 1\r\n          return (\r\n            <div className=\"ReviewAnswer\">\r\n              <h5 className=\"rQuestion\">{`${i + 1}. ${quest.question\r\n                .replace(/&quot;/g, \"\")\r\n                .replace(/&#039;/g, \"\")}`}</h5>\r\n              {answers[i] === quest.correct_answer ? (\r\n                <p className=\"rAnswer CorrectAns\">{`${answers[i]\r\n                  .replace(/&quot;/g, \"\")\r\n                  .replace(/&#039;/g, \"\")} `}</p>\r\n              ) : (\r\n                <div>\r\n                  <p className=\"Incorrectly\">{`You answered Incorrectly`}</p>\r\n                  <p className=\"rAnswer IncorrectAns\">\r\n                    {answers[i].replace(/&quot;/g, \"\").replace(/&#039;/g, \"\")}\r\n                  </p>\r\n                  <p className=\"rAnswer CorrectAns\">{`${quest.correct_answer}`}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return question[questionNumber] !== undefined ? (\r\n    <div>\r\n      <Pregunta\r\n        p={question[questionNumber].question}\r\n        incorrectAnswers={question[questionNumber].incorrect_answers}\r\n        correctAnswer={question[questionNumber].correct_answer}\r\n        className={Pregunta}\r\n      ></Pregunta>\r\n    </div>\r\n  ) : questionNumber === question.length && questionNumber !== 0 ? (\r\n    <div>\r\n      <h1 className=\"FinalScore\">{`You got ${score} out of 10 correct!`}</h1>\r\n      <h2>Review Your Answers!</h2>\r\n      <ReviewAnswers></ReviewAnswers>\r\n    </div>\r\n  ) : (\r\n    // Muestra el loading / Implementar spin\r\n    <h4 className=\"Loading\">Loading...</h4>\r\n  )\r\n}\r\n","import \"./App.css\"\r\nimport Questionary from \"./Cuestionario\"\r\nimport React from \"react\"\r\n\r\nfunction App() {\r\n  return <Questionary></Questionary>\r\n}\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}